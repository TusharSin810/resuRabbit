/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: CGboy333 (https://sketchfab.com/James.Chen1)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/rabbit-run-7ab75a9c956340bbb917e5851c714536
Title: rabbit_run

Material Legend:
- blinn1: Primary Red (#FF0000) - Used for inner mouth and some facial features
- blinn2: Forest Green (#228B22) - Used for outer ears and some body parts
- blinn3: Royal Blue (#4169E1) - Used for inner ears and some facial features
- blinn4: Gold (#FFD700) - Used for eyes and some facial features
- blinn5: Deep Pink (#FF1493) - Used for nose and some facial features
- blinn6: Teal (#008080) - Used for teeth and some facial features
- blinn7: Chocolate (#D2691E) - Used for main body and tail
- blinn8: Indigo (#4B0082) - Used for lower body and some facial features
*/

import * as THREE from "three";
import React, { useRef, useEffect, useMemo } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

// Type definitions for component props
type RabbitProps = {
  scale?: number;
  position?: [number, number, number];
  rotation?: [number, number, number];
  animationSpeed?: number;
  castShadow?: boolean;
  receiveShadow?: boolean;
  eyebrowColor?: string;
  eyeColor?: string;
  noseColor?: string;
  innerEarColor?: string;
  outerEarColor?: string;
  bodyColor?: string;
  lowerBodyColor?: string;
  teethColor?: string;
  innerMouthColor?: string;
};

// Type definitions for GLTF result
type GLTFResult = GLTF & {
  nodes: {
    Object_31: THREE.SkinnedMesh;
    Object_33: THREE.SkinnedMesh;
    Object_34: THREE.SkinnedMesh;
    Object_35: THREE.SkinnedMesh;
    Object_36: THREE.SkinnedMesh;
    Object_37: THREE.SkinnedMesh;
    Object_38: THREE.SkinnedMesh;
    Object_39: THREE.SkinnedMesh;
    Object_40: THREE.SkinnedMesh;
    Object_41: THREE.SkinnedMesh;
    Object_42: THREE.SkinnedMesh;
    Object_43: THREE.SkinnedMesh;
    Object_44: THREE.SkinnedMesh;
    Object_45: THREE.SkinnedMesh;
    Object_46: THREE.SkinnedMesh;
    Object_47: THREE.SkinnedMesh;
    Object_48: THREE.SkinnedMesh;
    Object_50: THREE.SkinnedMesh;
    Object_52: THREE.SkinnedMesh;
    _rootJoint: THREE.Bone;
  };
  materials: {
    blinn7: THREE.MeshStandardMaterial;
    blinn6: THREE.MeshStandardMaterial;
    blinn2: THREE.MeshStandardMaterial;
    blinn5: THREE.MeshStandardMaterial;
    blinn3: THREE.MeshStandardMaterial;
    blinn4: THREE.MeshStandardMaterial;
    blinn1: THREE.MeshStandardMaterial;
    blinn8: THREE.MeshStandardMaterial;
  };
};

type ActionName = "Take 001";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export function Rabbit({
  scale = 0.38,
  position = [0, 0, 0],
  rotation = [0, 0, 0],
  animationSpeed = 1,
  castShadow = true,
  receiveShadow = true,


  eyebrowColor = "#000000", // Default black for eyebrows
  eyeColor = "Grey", // Default grey for eyes---DONE
  noseColor = "#222222", // Default  for nose
  innerEarColor = "#EC7FA9", // Default Pink for inner ears---DONE
  outerEarColor = "#F8F4E1", // Default white for outer ears---DONE
  bodyColor = "#F8F4E1", // Default white for body--DONE
  lowerBodyColor = "#F8F4E1", // Default white for lower body--DONE
  teethColor = "#FDFAF6", // Default teal for teeth--DONE
  innerMouthColor = "#F7374F", // Default red for inner mouth---DONE


}: RabbitProps) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials, animations } = useGLTF(
    "/rabbit_run/scene.gltf"
  ) as GLTFResult;
  const { actions } = useAnimations(animations, group);

  // Create custom materials with distinct colors and properties
  const customMaterials = useMemo(() => {
    return {
      // Primary Red - MOUTH
      blinn1: new THREE.MeshStandardMaterial({
        color: innerMouthColor,
        roughness: 0.3,
        metalness: 0.1,
        emissive: "#F7374F",
        emissiveIntensity: 0.1,
      }),
      // Pink - INNER EAR
      blinn2: new THREE.MeshStandardMaterial({
        color: outerEarColor,
        roughness: 0.4,
        metalness: 0.05,
        emissive: "##EC7FA9",
        emissiveIntensity: 0.1,
      }),
      // White---OUTER EAR
      blinn3: new THREE.MeshStandardMaterial({
        color: innerEarColor,
        roughness: 0.35,
        metalness: 0.15,
        emissive: "#F8F4E1",
        emissiveIntensity: 0.1,
      }),
      // Grey--EYES
      blinn4: new THREE.MeshStandardMaterial({
        color: eyeColor,
        roughness: 0.2,
        metalness: 0.3,
        emissive: "Grey",
        emissiveIntensity: 0.1,
      }),
      // NOSE
      blinn5: new THREE.MeshStandardMaterial({
        color: noseColor,
        roughness: 0.25,
        metalness: 0.2,
        emissive: "#222222",
        emissiveIntensity: 0.1,
      }),
      // TEETH
      blinn6: new THREE.MeshStandardMaterial({
        color: teethColor,
        roughness: 0.3,
        metalness: 0.1,
        emissive: "#FDFAF6",
        emissiveIntensity: 0.1,
      }),
      // Main Body
      blinn7: new THREE.MeshStandardMaterial({
        color: bodyColor,
        roughness: 0.4,
        metalness: 0.05,
        emissive: "#F8F4E1",
        emissiveIntensity: 0.1,
      }),
      // Lower Body
      blinn8: new THREE.MeshStandardMaterial({
        color: lowerBodyColor,
        roughness: 0.35,
        metalness: 0.1,
        emissive: "#F8F4E1",
        emissiveIntensity: 0.1,
      }),
      // Special eyebrow material - completely separate from other materials
      eyebrows: new THREE.MeshStandardMaterial({
        color: eyebrowColor,
        roughness: 0.7,
        metalness: 0,
        emissive: "#000000",
        emissiveIntensity: 0,
        name: "eyebrow-material-" + Math.random().toString(36).slice(2),
        side: THREE.DoubleSide,
      }),
    };
  }, [
    innerMouthColor,
    outerEarColor,
    innerEarColor,
    eyeColor,
    noseColor,
    teethColor,
    bodyColor,
    lowerBodyColor,
    eyebrowColor,
  ]);

  // Handle animation
  useEffect(() => {
    if (actions["Take 001"]) {
      const action = actions["Take 001"];
      action.play();
      action.setEffectiveTimeScale(animationSpeed);
    }
  }, [actions, animationSpeed]);

  return (
    <group
      ref={group}
      scale={scale}
      position={position}
      rotation={rotation}
      dispose={null}
    >
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="root">
            <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
              <group name="rabbit_1">
                <group name="GLTF_created_0">
                  <primitive object={nodes._rootJoint} />
                  <group name="rabbit_2" />

                  {/* Body Parts */}
                  <group name="body_parts" renderOrder={0}>
                    {/* Main Body Parts */}
                    <skinnedMesh
                      name="Object_31"
                      geometry={nodes.Object_31.geometry}
                      material={customMaterials.blinn7}
                      skeleton={nodes.Object_31.skeleton}
                      castShadow={castShadow}
                      receiveShadow={receiveShadow}
                    />

                    {/* Teeth */}
                    <skinnedMesh
                      name="Object_33"
                      geometry={nodes.Object_33.geometry}
                      material={customMaterials.blinn6}
                      skeleton={nodes.Object_33.skeleton}
                      castShadow={castShadow}
                      receiveShadow={receiveShadow}
                    />

                    {/* Outer Ears */}
                    <skinnedMesh
                      name="Object_34"
                      geometry={nodes.Object_34.geometry}
                      material={customMaterials.blinn3}
                      skeleton={nodes.Object_34.skeleton}
                      castShadow={castShadow}
                      receiveShadow={receiveShadow}
                    />

                    {/* Outer left Ears */}
                    <skinnedMesh
                      name="Object_35"
                      geometry={nodes.Object_35.geometry}
                      material={customMaterials.blinn2}
                      skeleton={nodes.Object_35.skeleton}
                      castShadow={castShadow}
                      receiveShadow={receiveShadow}
                    />

                    {/* Inner right ear */}
                    <skinnedMesh
                      name="Object_36"
                      geometry={nodes.Object_36.geometry}
                      material={customMaterials.blinn3}
                      skeleton={nodes.Object_36.skeleton}
                      castShadow={castShadow}
                      receiveShadow={receiveShadow}
                    />

                    {/* Outer right ear */}
                    <skinnedMesh
                      name="Object_37"
                      geometry={nodes.Object_37.geometry}
                      material={customMaterials.blinn7}
                      skeleton={nodes.Object_37.skeleton}
                      castShadow={castShadow}
                      receiveShadow={receiveShadow}
                    />

                    {/* Inner Mouth */}
                    <skinnedMesh
                      name="Object_38"
                      geometry={nodes.Object_38.geometry}
                      material={customMaterials.blinn1}
                      skeleton={nodes.Object_38.skeleton}
                      castShadow={castShadow}
                      receiveShadow={receiveShadow}
                    />

                    {/* Face*/}
                    <skinnedMesh
                      name="Object_39"
                      geometry={nodes.Object_39.geometry}
                      material={customMaterials.blinn8}
                      skeleton={nodes.Object_39.skeleton}
                      castShadow={castShadow}
                      receiveShadow={receiveShadow}
                    />

                    {/* Nose */}
                    <skinnedMesh
                      name="Object_40"
                      geometry={nodes.Object_40.geometry}
                      material={customMaterials.blinn7}
                      skeleton={nodes.Object_40.skeleton}
                      castShadow={castShadow}
                      receiveShadow={receiveShadow}
                    />

                    {/* Inner Right eye */}
                    <skinnedMesh
                      name="Object_41"
                      geometry={nodes.Object_41.geometry}
                      material={customMaterials.blinn7}
                      skeleton={nodes.Object_41.skeleton}
                      castShadow={castShadow}
                      receiveShadow={receiveShadow}
                    />

                    {/* Cornea right */}
                    <skinnedMesh
                      name="Object_42"
                      geometry={nodes.Object_42.geometry}
                      material={customMaterials.blinn5}
                      skeleton={nodes.Object_42.skeleton}
                      castShadow={castShadow}
                      receiveShadow={receiveShadow}
                    />

                    {/* Eyes */}
                    {/* <skinnedMesh
                      name="Object_43"
                      geometry={nodes.Object_43.geometry}
                      material={customMaterials.blinn4}
                      skeleton={nodes.Object_43.skeleton}
                      castShadow={castShadow}
                      receiveShadow={receiveShadow}
                    /> */}

                    {/* Inner left Eye */}
                    <skinnedMesh
                      name="Object_44"
                      geometry={nodes.Object_44.geometry}
                      material={customMaterials.blinn7}
                      skeleton={nodes.Object_44.skeleton}
                      castShadow={castShadow}
                      receiveShadow={receiveShadow}
                    />

                    {/* Cornea */}
                    <skinnedMesh
                      name="Object_45"
                      geometry={nodes.Object_45.geometry}
                      material={customMaterials.blinn5}
                      skeleton={nodes.Object_45.skeleton}
                      castShadow={castShadow}
                      receiveShadow={receiveShadow}
                    />

                    {/* inner Left Eye */}
                    {/* <skinnedMesh
                      name="Object_46"
                      geometry={nodes.Object_46.geometry}
                      material={customMaterials.blinn3}
                      skeleton={nodes.Object_46.skeleton}
                      castShadow={castShadow}
                      receiveShadow={receiveShadow}
                    /> */}

                    {/* Lower Body */}
                    <skinnedMesh
                      name="Object_47"
                      geometry={nodes.Object_47.geometry}
                      material={customMaterials.blinn7}
                      skeleton={nodes.Object_47.skeleton}
                      castShadow={castShadow}
                      receiveShadow={receiveShadow}
                    />

                    {/* Tail */}
                    <skinnedMesh
                      name="Object_48"
                      geometry={nodes.Object_48.geometry}
                      material={customMaterials.blinn7}
                      skeleton={nodes.Object_48.skeleton}
                      castShadow={castShadow}
                      receiveShadow={receiveShadow}
                    />
                  </group>

                  {/* Eyebrows in separate group with higher render order */}
                  <group name="eyebrows" renderOrder={1}>
                    {/* Left Eyebrow */}
                    <skinnedMesh
                      name="Object_50"
                      geometry={nodes.Object_50.geometry}
                      material={customMaterials.eyebrows}
                      skeleton={nodes.Object_50.skeleton}
                      castShadow={castShadow}
                      receiveShadow={receiveShadow}
                    />

                    {/* Right Eyebrow */}
                    <skinnedMesh
                      name="Object_52"
                      geometry={nodes.Object_52.geometry}
                      material={customMaterials.eyebrows}
                      skeleton={nodes.Object_52.skeleton}
                      castShadow={castShadow}
                      receiveShadow={receiveShadow}
                    />
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/rabbit_run/scene.gltf");
